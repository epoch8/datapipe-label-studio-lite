name: Run tests

on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Setup poetry
      run: |
        pip install poetry==1.1.6

    - name: Cache Python dependencies
      uses: actions/cache@v2
      with:
        path: /home/runner/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        poetry install

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 datapipe_label_studio_lite --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 datapipe_label_studio_lite --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Lint with mypy
      run: |
        poetry run mypy -p datapipe_label_studio_lite --ignore-missing-imports --follow-imports=silent --check-untyped-defs

  test:
    # needs: lint

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
        test-db-env: ['postgres']
        test-ls-env: [
          'heartexlabs/label-studio:1.7.0',
          'heartexlabs/label-studio:1.6.0',
        ]

    services:
      postgres:
        # Docker Hub image
        image: postgres:11.5
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Run Label Studio
      run: |
        docker run -d \
          --add-host host.docker.internal:host-gateway \
          -p 8080:8080 \
          --env DJANGO_DB=default \
          --env POSTGRE_NAME=postgres \
          --env POSTGRE_USER=postgres \
          --env POSTGRE_PASSWORD=password \
          --env POSTGRE_PORT=5432 \
          --env POSTGRE_HOST=host.docker.internal ${{ matrix.test-ls-env }}

    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Setup poetry
      run: |
        pip install poetry==1.1.6

    - name: Cache Python dependencies
      uses: actions/cache@v2
      with:
        path: /home/runner/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        poetry install

    - name: Test with pytest
      run: |
        poetry run pytest -vv -x
      env:
        LABEL_STUDIO_HOST: localhost
        LABEL_STUDIO_PORT: 8080
