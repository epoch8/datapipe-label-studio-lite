name: Run tests

on:
  push:
    paths-ignore:
      - "docs/**"
      - "**/*.md"

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
  
      - name: Install dependencies
        run: |
          pip install ".[dev]"

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 datapipe_label_studio_lite --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 datapipe_label_studio_lite --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Lint with mypy
        run: |
          mypy -p datapipe_label_studio_lite --ignore-missing-imports --follow-imports=silent --check-untyped-defs

  test:
    # needs: lint

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
        test-db-env: ["postgres"]
        test-ls-env:
          [
            "heartexlabs/label-studio:1.10.1",
            "heartexlabs/label-studio:1.8.0",
          ]

    services:
      postgres:
        # Docker Hub image
        image: postgres:11.5
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Run Label Studio
        run: |
          docker run -d \
            --add-host host.docker.internal:host-gateway \
            -p 8080:8080 \
            --env DJANGO_DB=default \
            --env POSTGRE_NAME=postgres \
            --env POSTGRE_USER=postgres \
            --env POSTGRE_PASSWORD=password \
            --env POSTGRE_PORT=5432 \
            --env POSTGRE_HOST=host.docker.internal ${{ matrix.test-ls-env }}

      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install dependencies
        run: |
          pip install ".[dev]"

      - name: Test with pytest
        run: |
          pytest -vv -x
        env:
          LABEL_STUDIO_HOST: localhost
          LABEL_STUDIO_PORT: 8080
